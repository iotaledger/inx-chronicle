use("chronicle_beta_25");

let res = {};
let start_index = 17339;
let end_index = 17341;

for (let ledger_index = start_index; ledger_index<=end_index; ++ledger_index) {
    let ms = {};

    ms.milestone_data = db.iota_milestones.aggregate([
        { "$match": { "at.milestone_index": ledger_index } },
        { "$project": {
            "_id": 0,
            "milestone_id": "$_id",
            "at": 1,
            "payload": 1,
        } }
    ]).toArray()[0];

    ms.milestone_data.protocol_params = 
        db.iota_protocol_updates
            .find({ "_id": { "$lte": ledger_index } })
            .sort({ "_id": -1 })
            .limit(1)
            .toArray()[0]
            .parameters;

    ms.milestone_data.node_config = 
        db.iota_configuration_updates
            .find({ "_id": { "$lte": ledger_index } })
            .sort({ "_id": -1 })
            .limit(1)
            .toArray()[0];
    delete ms.milestone_data.node_config._id;

    ms.cone = db.iota_blocks.aggregate([
        { "$match": { "metadata.referenced_by_milestone_index": ledger_index } },
        { "$sort": { "metadata.white_flag_index": 1 } },
        { "$project": {
            "_id": 0,
            "block_id": "$_id",
            "raw": 1,
            "metadata": 1,
        } }
    ]).toArray()
        .reduce(function(map, obj) {
            map[obj.metadata.white_flag_index] = obj;
            return map;
        }, {});

    ms.consumed = db.iota_outputs.aggregate([
        { "$match": {
            "metadata.spent_metadata.spent.milestone_index": { "$eq": ledger_index }
        } },
        { "$project": {
            "_id": 0,
            "output": {
                "output_id": "$_id",
                "block_id": "$metadata.block_id",
                "booked": "$metadata.booked",
                "output": "$output",
                "rent_structure": "$details.rent_structure",
            },
            "spent_metadata": "$metadata.spent_metadata",
        } },
    ]).toArray();

    ms.created = db.iota_outputs.aggregate([
        { "$match": {
            "metadata.booked.milestone_index": { "$eq": ledger_index }
        } },
        { "$project": {
            "_id": 0,
            "output_id": "$_id",
            "block_id": "$metadata.block_id",
            "booked": "$metadata.booked",
            "output": "$output",
            "rent_structure": "$details.rent_structure",
        } },
    ]).toArray();

    res[ledger_index] = ms;
}

res
