openapi: 3.0.3
info:
  title: Analytics REST API
  description: This document specifies the analytics REST API for Chronicle software.
  contact:
    email: contact@iota.org
  license:
    name: Apache 2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
  version: 1.0.0
externalDocs:
  description: Find out more about IOTA
  url: "https://iota.org"
servers:
  - url: "http://127.0.0.1:8000"
tags:
  - name: ledger
    description: Everything about the ledger.
  - name: activity
    description: Everything about IOTA activity.
paths:
  /api/analytics/v2/ledger/storage-deposit:
    get:
      tags:
        - ledger
      summary: Returns storage deposit and byte cost analytics.
      description: >-
        Returns analytics about storage deposit unlock conditions and funds held therein,
        as well as the byte costs associated with output storage at the ledger state 
        specified by the provided index.
      parameters:
        - $ref: "#/components/parameters/ledgerIndex"
      responses:
        "200":
          $ref: "#/components/responses/StorageDeposit"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/ledger/native-tokens:
    get:
      tags:
        - ledger
      summary: Returns analytics about native tokens.
      description: >-
        Returns analytics about native tokens created by foundry outputs
        at the ledger state specified by the provided index.
      parameters:
        - $ref: "#/components/parameters/ledgerIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/ledger/nfts:
    get:
      tags:
        - ledger
      summary: Returns analytics about NFTs.
      description: >-
        Returns analytics about NFT outputs at the ledger state specified by the provided index.
      parameters:
        - $ref: "#/components/parameters/ledgerIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/ledger/richest-addresses:
    get:
      tags:
        - ledger
      summary: Returns the top richest addresses.
      description: >-
        Returns analytics about the top richest addresses at the ledger state specified by the provided index
      parameters:
        - $ref: "#/components/parameters/ledgerIndex"
        - $ref: "#/components/parameters/top"
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RichestAddressesResponse"
              examples:
                default:
                  $ref: "#/components/examples/richest-addresses-example"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/ledger/token-distribution:
    get:
      tags:
        - ledger
      summary: Returns the current token distribution.
      description: >-
        Returns analytics about the distribution of IOTA tokens at the ledger state specified by the provided index
      parameters:
        - $ref: "#/components/parameters/ledgerIndex"
      responses:
        "200":
          description: Successful operation.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/WealthDistributionResponse"
              examples:
                default:
                  $ref: "#/components/examples/token-distribution-example"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/addresses:
    get:
      tags:
        - activity
      summary: Returns address activity.
      description: >-
        Returns the count of unique addresses used within the specified milestone range, 
        divided into spending and receiving.
      parameters:
        - $ref: "#/components/parameters/startIndex"
        - $ref: "#/components/parameters/endIndex"
      responses:
        "200":
          $ref: "#/components/responses/Address"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/milestones/by-id/{milestoneId}:
    get:
      tags:
        - activity
      summary: Returns milestone activity.
      description: >-
        Returns various activity counts for a given milestone.
      parameters:
        - $ref: "#/components/parameters/milestoneId"
      responses:
        "200":
          $ref: "#/components/responses/Milestone"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/milestones/by-index/{milestoneIndex}:
    get:
      tags:
        - activity
      summary: Returns milestone activity.
      description: >-
        Returns various activity counts for a given milestone.
      parameters:
        - $ref: "#/components/parameters/milestoneIndex"
      responses:
        "200":
          $ref: "#/components/responses/Milestone"
        "400":
          $ref: "#/components/responses/BadRequest"
        "404":
          $ref: "#/components/responses/NoResults"
        "500":
          $ref: "#/components/responses/InternalError" 
  /api/analytics/v2/activity/outputs:
    get:
      tags:
        - activity
      summary: Returns total output count and value.
      description: >-
        Returns the count and value of outputs created within the specified milestone range.
      parameters:
        - $ref: "#/components/parameters/startIndex"
        - $ref: "#/components/parameters/endIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/outputs/basic:
    get:
      tags:
        - activity
      summary: Returns total basic output count and value.
      description: >-
        Returns the count and value of basic outputs created within the specified milestone range.
      parameters:
        - $ref: "#/components/parameters/startIndex"
        - $ref: "#/components/parameters/endIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/outputs/alias:
    get:
      tags:
        - activity
      summary: Returns total alias output count and value.
      description: >-
        Returns the count and value of alias outputs created within the specified milestone range.
      parameters:
        - $ref: "#/components/parameters/startIndex"
        - $ref: "#/components/parameters/endIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/outputs/nft:
    get:
      tags:
        - activity
      summary: Returns total nft output count and value.
      description: >-
        Returns the count and value of nft outputs created within the specified milestone range.
      parameters:
        - $ref: "#/components/parameters/startIndex"
        - $ref: "#/components/parameters/endIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
  /api/analytics/v2/activity/outputs/foundry:
    get:
      tags:
        - activity
      summary: Returns total foundry output count and value.
      description: >-
        Returns the count and value of foundry outputs created within the specified milestone range.
      parameters:
        - $ref: "#/components/parameters/startIndex"
        - $ref: "#/components/parameters/endIndex"
      responses:
        "200":
          $ref: "#/components/responses/Output"
        "400":
          $ref: "#/components/responses/BadRequest"
        "500":
          $ref: "#/components/responses/InternalError"
components:
  schemas:
    AddressAnalyticsResponse:
      description: Compiled statistics about address usage.
      properties:
        totalActiveAddresses:
          type: string
          description: The total number of unique addresses used.
        receivingAddresses:
          type: string
          description: The total number of unique receiving addresses.
        sendingAddresses:
          type: string
          description: The total number of unique sending addresses.
      required:
        - totalActiveAddresses
        - receivingAddresses
        - sendingAddresses
    MilestoneAnalyticsResponse:
      description: Compiled statistics about milestones.
      properties:
        blocksCount:
          type: integer
          description: The number of blocks referenced by the requested milestone.
        perPayloadType:
          type: object
          description: The various per payload type counts.
          properties:
            txPayloadCount:
              type: integer
              description: The number of transaction payloads referenced by the requested milestone.
            txTreasuryPayloadCount:
              type: integer
              description: The number of treasury transaction payloads referenced by the requested milestone.
            milestonePayloadCount:
              type: integer
              description: The number of milestone payloads referenced by the requested milestone.
            taggedDataPayloadCount:
              type: integer
              description: The number of tagged data payloads referenced by the requested milestone.
            noPayloadCount:
              type: integer
              description: The number of blocks without payload referenced by the requested milestone.
            required:
              - txPayloadCount
              - txTreasuryPayloadCount
              - milestonePayloadCount
              - taggedDataPayloadCount
              - noPayloadCount
        perInclusionState:
          type: object
          description: The various per inclusion state counts.
          properties:
            confirmedTxCount:
              type: integer
              description: The number of confirmed transactions referenced by the requested milestone.
            conflictingTxCount:
              type: integer
              description: The number of conflicting transactions referenced by the requested milestone.
            noTxCount:
              type: integer
              description: The number of non-transaction blocks referenced by the requested milestone.
            required:
              - confirmedTxCount
              - conflictingTxCount
              - noTxCount
      required:
        - blocksCount
        - perPayloadType
        - perInclusionState
    OutputAnalyticsResponse:
      description: Compiled output statistics.
      properties:
        count:
          type: string
          description: The total count of outputs.
        totalValue:
          type: string
          description: The total value of IOTA tokens.
      required:
        - count
        - totalValue
    StorageDepositAnalyticsResponse:
      description: Compiled storage deposit and byte cost statistics.
      properties:
        outputCount:
          type: string
          description: The total count of outputs.
        storageDepositReturnCount:
          type: string
          description: The total count of outputs with storage deposit return unlock conditions.
        storageDepositReturnTotalValue:
          type: string
          description: The total value of funds locked with storage deposit return unlock conditions.
        totalKeyBytes:
          type: string
          description: The number of bytes used to store key fields.
        totalDataBytes:
          type: string
          description: The number of bytes used to store data fields.
        totalByteCost:
          type: string
          description: The total calculated byte cost.
        ledgerIndex:
          type: number
          description: The milestone index to be used to determine the ledger state.
        rentStructure:
          description: The rent structure according to TIP-19.
          properties:
            vByteCost:
              description: Defines the rent of a single virtual byte denoted in IOTA tokens.
              type: integer
            vByteFactorData:
              description: Defines the factor to be used for data only fields.
              type: integer
            vByteFactorKey:
              description: Defines the factor to be used for key/lookup generating fields.
              type: integer
          required:
            - vByteCost
            - vByteFactorData
            - vByteFactorKey
      required:
        - outputCount
        - storageDepositReturnCount
        - storageDepositReturnTotalValue
        - totalKeyBytes
        - totalDataBytes
        - totalByteCost
        - ledgerIndex
        - rentStructure
    RichestAddressesResponse:
      description: Richest addresses statistics.
      properties:
        top:
          type: array
          description: The top wealthiest addresses.
          items:
            type: object
            properties:
              address:
                oneOf:
                  - $ref: "https://raw.githubusercontent.com/iotaledger/tips/stardust-api/tips/TIP-0025/core-rest-api.yaml#/components/schemas/Ed25519Address"
                  - $ref: "https://raw.githubusercontent.com/iotaledger/tips/stardust-api/tips/TIP-0025/core-rest-api.yaml#/components/schemas/AliasAddress"
                  - $ref: "https://raw.githubusercontent.com/iotaledger/tips/stardust-api/tips/TIP-0025/core-rest-api.yaml#/components/schemas/NFTAddress"
              balance:
                type: string
                description: The total balance within this range.
            required:
              - address
              - balance
      required:
        - top
    WealthDistributionResponse:
      description: Wealth distribution statistics.
      properties:
        distribution:
          type: array
          description: The distribution of IOTA tokens.
          items:
            type: object
            properties:
              range:
                type: object
                description: The range of balances.
                properties:
                  start:
                    type: number
                  end:
                    type: number
                required:
                  - start
                  - end
              addressCount:
                type: string
                description: The number of addresses in this range.
              totalBalance:
                type: string
                description: The total balance within this range.
            required:
              - range
              - addressCount
              - totalBalance
      required:
        - distribution
  responses:
    Output:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/OutputAnalyticsResponse"
          examples:
            default:
              $ref: "#/components/examples/output-example"
    Address:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/AddressAnalyticsResponse"
          examples:
            default:
              $ref: "#/components/examples/addresses-example"
    StorageDeposit:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/StorageDepositAnalyticsResponse"
          examples:
            default:
              $ref: "#/components/examples/storage-deposit-example"
    Milestone:
      description: Successful operation.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/MilestoneAnalyticsResponse"
          examples:
            default:
              $ref: "#/components/examples/milestone-example"
    NoResults:
      description: >-
        Unsuccessful operation: indicates that the requested data was not found.
      content:
        application/json:
          schema:
            $ref: "https://raw.githubusercontent.com/iotaledger/tips/stardust-api/tips/TIP-0025/core-rest-api.yaml#/components/schemas/NotFoundResponse"
    BadRequest:
      description: "Unsuccessful operation: indicates that the provided start or end milestone is invalid."
      content:
        application/json:
          schema:
            $ref: "https://raw.githubusercontent.com/iotaledger/tips/stardust-api/tips/TIP-0025/core-rest-api.yaml#/components/schemas/BadRequestResponse"
    InternalError:
      description: >-
        Unsuccessful operation: indicates that an unexpected, internal
        server error happened which prevented the node from fulfilling the
        request.
      content:
        application/json:
          schema:
            $ref: "https://raw.githubusercontent.com/iotaledger/tips/stardust-api/tips/TIP-0025/core-rest-api.yaml#/components/schemas/InternalErrorResponse"
  parameters:
    startIndex:
      in: query
      name: startIndex
      schema:
        type: integer
      example: 100000
      required: false
      description: The milestone index with which to limit the start of the results.
    endIndex:
      in: query
      name: endIndex
      schema:
        type: integer
      example: 200000
      required: false
      description: The milestone index with which to limit the end of the results.
    ledgerIndex:
      in: query
      name: ledgerIndex
      schema:
        type: integer
      example: 200000
      required: false
      description: >-
        The milestone index to be used to determine the ledger state. Defaults to the 
        application's current ledger index.
    top:
      in: query
      name: top
      schema:
        type: number
      example: 100
      required: false
      description: The milestone index to be used to determine the ledger state. Defaults to 200.
    milestoneId:
      in: path
      name: milestoneId
      schema:
        type: string
      example: "0x7a09324557e9200f39bf493fc8fd6ac43e9ca750c6f6d884cc72386ddcb7d695"
      required: true
      description: Milestone id for which to receive milestone analytics.
    milestoneIndex:
      in: path
      name: milestoneIndex
      schema:
        type: integer
      example: 100000
      required: true
      description: Milestone index for which to receive milestone analytics.
  examples:
    storage-deposit-example:
      value:
        outputCount: "714"
        storageDepositReturnCount: "43"
        storageDepositReturnTotalValue: "12114000"
        totalKeyBytes: "24276"
        totalDataBytes: "124636"
        totalByteCost: "635318000"
        ledgerIndex: 1005429
        rentStructure:
          - vByteCost: 500
            vByteFactorData: 1
            vByteFactorKey: 10
    output-example:
      value:
        count: "81"
        totalValue: "34903000"
    addresses-example:
      value:
        totalActiveAddresses: "443"
        receivingAddresses: "443"
        sendingAddresses: "0"
    milestone-example:
      value:
        blocksCount: 100
        perPayloadType:
            - txPayloadCount: 20
              txTreasuryPayloadCount: 2
              milestonePayloadCount: 1
              taggedDataPayloadCount: 27
              noPayloadCount: 50
        perInclusionState:
            - confirmedTxCount: 20
              conflictingTxCount: 2
              noTxCount: 78
    richest-addresses-example:
      value:
        top:
          - address:
              - type: 0
                pubKeyHash: "0x3845105b59429361a75b3203a6e24e16d19540aad6bd1936449b62f1c4bbe5da"
            balance: "2779164783277761"
          - address:
              - type: 0
                pubKeyHash: "0xd0d361341fa3bb2f6855039a82ee9ea470c3336eaf34d22767fdfa901ba63e31"
            balance: "7398600000"
        ledgerIndex: 1005429
    token-distribution-example:
      value:
        distribution:
          - range:
              - start: 100000
                end: 1000000
            addressCount: "39"
            totalBalance: "14612000"
          - range:
              - start: 1000000
                end: 10000000
            addressCount: "22"
            totalBalance: "41274500"
          - range:
              - start: 100000000
                end: 1000000000
            addressCount: "27"
            totalBalance: "25486528000"
        ledgerIndex: 1005429
